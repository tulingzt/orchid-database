import{z as t,x as r}from"./index-CrBMAzv8.js";const i={getMultiple(a){var s;const e=a?{...a,species_ids:(s=a.species_ids)==null?void 0:s.join(",")}:void 0;return t.get("/api/data/sepal",{params:e,paramsSerializer:{indexes:null}})},get(a){return t.get(`/api/data/sepal/${a}`)},create(a){return t.post("/api/data/sepal",a)},update(a,e){return t.put(`/api/data/sepal/${a}`,e)},delete(a){return t.delete(`/api/data/sepal/${a}`)}},p=r("sepal",{state:()=>({items:[],pagination:{page:1,limit:10,total:0,pages:0},loading:!1,error:null}),actions:{async fetchItems(a){this.loading=!0;try{const e=await i.getMultiple({...a,page:this.pagination.page,limit:this.pagination.limit});this.items=e.data.data,this.pagination={page:e.data.pagination.page,limit:e.data.pagination.per_page,total:e.data.pagination.total,pages:e.data.pagination.pages},this.error=null}catch(e){this.error=e.message}finally{this.loading=!1}},async createItem(a){try{return(await i.create(a)).data.sepal_id}catch(e){throw new Error(e.message)}},async updateItem(a,e){try{await i.update(a,e)}catch(s){throw new Error(s.message)}},async deleteItem(a){try{await i.delete(a)}catch(e){throw new Error(e.message)}}}});export{p as u};
